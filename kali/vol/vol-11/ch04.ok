= Populating Velocity Space

== Choosing a Velocity

*Alice*: Now that we completely understand how you choose the radial distance
for a particle, there is only one thing left to do: to choose the magnitude of
its velocity.  In your code you had a more complicated construction than the
one-liner you used for the position.  For the velocity you wrote:

 :include: .mkplummer1.rb-8

You are throwing dice a number of times, until some criterion is satisfied,
and then you move on to a new one-liner that gives you the value for the
variable +velocity+, which is the magnitude of the velocity.

*Bob*: Here is the recipe for that part.  Aarseth <i>et al.</i> start
with the observation that the maximum velocity allowed at a radius _r_
is the escape velocity <tex>$v_e(r)$</tex>, itself a function that
depends on the radius.  The escape velocity can be determined by
requiring that a particle at radius _r_ has exactly zero total energy,
<i>i.e.</i> its kinetic energy is just enough for a parabolic escape
to infinity.  Since the potential energy for a test particle moving in
Plummer's model is given as

:equation:
\Phi(r) \, = \, -\, {1\over \,\left(r^2 + 1\right)^{1/2}}

per unit mass of the test particle, we can equate that to the kinetic
energy, also per unit mass, of a particle moving at the escape
velocity:

:equation:
\half \left\{v_e(r)\right\}^2 \, + \, \Phi(r) \, = \, 0 \, \Rightarrow

:equation:
\left\{v_e(r)\right\}^2  \, = \, 2\left(r^2 + 1\right)^{-1/2} \, \Rightarrow

:equation:
\label{escapevelocity}
v_e(r)  \, = \, \sqrt{2} \left(r^2 + 1\right)^{-1/4}

This is the maximum velocity allowed at radius _r_, and we also know
that the minimum velocity at radius _r_ is zero.  The question is:
what is the probability distribution for <tex>$0\le v \le v_e$</tex>.

*Alice*: I see that you are using again the choice of units given by
Aarseth <i>et al.</i>, where <tex>$G=M=a=1$</tex>.

*Bob*: Yes, they are by far the most convenient, they save time when
writing down and manipulating the equations, and they make it also less
likely to make mistakes.

*Alice*: I'm not sure about the last part of what you said.  The advantage
of keeping the full physical quantities is that you always have a few extra
checks you can make, at the end: if the physical dimensions of length, mass
and time are not exactly the same, at the left and right hand side of an
equation, the equation must be wrong.  If you work only with dimensionless
quantities, you loose that advantage.

*Bob*: I don't consider it an advantage to have to do so much more work that
you are likely to make more mistakes, so that you can then happily catch them.
But clearly we are talking about matters of taste, and we have already decided
we will present our results either way, now that we know exactly how
to transform in both directions, between physical and dimensionless variables.

== A Meta-Recipe

*Alice*: Yes, that is what we decided.  How did you find the probability
distribution for the velocities?

*Bob*: I started with the distribution function for the energy of the
particles:

:equation:
\label{distributionfunction}
f(\br,\bv)d\br\bv \, = \, f(E(r,v)4\pi r^2 dr4\pi v^dv \, = \,
       {192\sqrt(2)\over7\pi}(-E)^{7/2}r^2v^2drdv

*Alice*: Where did you get this expression from?

*Bob*: It's just what it is, for Plummer's model.  I found it in a useful
table in <i>The Gravitational Million-Body Problem</i>, by Douglas Heggie
and Piet Hut (Cambridge University Press, 2003).  It is table xxx on p. xxx,
a whole page full of useful properties of Plummer's model.

*Alice*: It is a power law in energy, and it looks like a polytrope.
Ah, yes, now I remember: Plummer's model is nothing else but a polytrope
of index five.  Polytropes are defined in general for index <tex>$n$</tex>
through a distribution function:

:equation:
f(E) \, \propto \, \left(|E|\right)^{n-3/2}

for negative energy, in other words for bound particles, while
<tex>$f(E)=0$</tex> for <tex>$E\ge0$</tex>, otherwise you would get
the whole universe filled with escapers.

But it is not fair to use such remembered knowledge, or equations that
you pluck from a book.  Our whole approach is aimed at spelling out
everything, both to help us in our research, to see new aspects we
might otherwise have overlooked, and to help us in our teaching, to
make things crystal clear to the students.

*Bob*: How do you expect to get new insight into the fact that the distribution
function of Plummer's model is a seven-halfth power of the energy?  That fact
will not change, no matter how long you stare at it.

*Alice*: That's not the point.  Once we spell out in complete detail how
you derive and verify all aspects of one recipe for one star cluster model,
you can then follow that example approach to construct any other recipe for
any other cluster model.  In other words, we are using Plummer's model as
a case study in order to present a meta-recipe for constructing recipes for
constructing models for star clusters.

*Bob*: I had no idea we were doing something that fancy.  But whatever words
you want to hang on it, I cannot deny that it is a good thing to check things
for yourself, and most importantly, I'll have to explain at least some
of these things in class pretty soon, so okay, let's go through the derivation.

However, we would probably lose the thread of our argument if we would
go into deriving eq. (ref(distributionfunction)) right now.  Let's postpone
that a bit, and first see whether we can reconstruct what I have written
in my program.  As you can expect, here too I just followed the recipe from
Aarseth <i>et al.</i>.  Let us first see whether we can at least derive that
recipe, assuming the validity of eq. (ref(distributionfunction)).

*Alice*: Sounds like a good plan.

== Following the Recipe

*Bob*: Here is what I have understood, so far, of the recipe.  Given the
distribution function for the energy, you have to transform that into an
equation for the magnitude for the velocity.  What makes life simpler, is
the fact that we are comparing particles with different velocity choices at
a given point, so we know that their potential energies are all the same.

This means that the probability to have an absolute value for the velocity
<tex>$v = |\bv|$</tex> at radial position <tex>$r = |\br|$</tex> is given by

:equation:
g(v)dv \, \propto \, \left(-E(r,v)\right)^{7/2}v^2dv

where the energy per unit mass <tex>$E(r,v) = \Phi(r) + \half v^2$</tex>
can be written in terms of the escape velocity <tex>$v_e$</tex> as
<tex>$E(r,v) = -v_e^2 + \half v^2$</tex>.  If we introduce the
variable

:equation:
q \, = \, {v \over v_e}

we can write <tex>$E(q) \propto q^2 - 1$</tex>, for a given fixed
<tex>$r$</tex>.  The distribution function for <tex>$v$</tex> then
becomes, in terms of <tex>$q$</tex>, proportional to the following function:

:equation:
g(q) \, = \, \left(1 - q^2\right)^{7/2}q^2

*Alice*: And the range of admissable _q_ values is <tex>$0\le q \le 1$</tex>.
This looks exactly like the problem we had for determining the radial
positions.  There we knew the density, <i>i.e.</i> the probability function
to find a particle at a given position.  By integrating the density we
obtained the cumulative mass function <tex>$m(r)$</tex>, and then we
inverted that to obtain <tex>$r(m)$</tex>.

So I guess the next step is to invert <tex>$g(q)$</tex>.  However, that
doesn't look so easy.

*Bob*: To say the least.  Therefore, for the velocities, they
choose a different approach.  If you plot the function
<tex>$g(q)$</tex>, then the height of that curve, for each
<tex>$q$</tex> value, gives you the relative probability that
<tex>$q$</tex> would lie in a region of small fixed width around that
value.

You can imagine that you can obtain a distribution of the required
weighting by throwing darts at that graph.  If you hit a point
somewhere above the graph, you throw a new dart, and you keep throwing
new darts until you hit a point below the graph, anywhere between
<tex>$q=0$</tex> and <tex>$q=1$</tex>.  If you follow that procedure,
you are automatically guaranteed that you score more hits at places
where the graph is higher, and exactly so in proportion to the height
of a graph.

== A Rejection Technique

*Alice*: That is a clever solution.  It is called a rejection technique.
Didn't John von Neumann first apply that?  You start by allowing more
solutions than the minimal set of correct ones, and then you weed out
the incorrect ones, by rejecting them.

*Bob*: Indeed.  And to make the procedure efficient, you don't want to
throw darts way above the graph, so you limit yourself to the maximum
value that the graph attains in the interval of interest, or perhaps
a slightly higher value.  The authors of the paper choose a value of 0.1.

*Alice*: Is that a safe value?  Let's check for ourselves.  The derivative
of <tex>$g(q)$</tex> is

:eqnarray:
{dg(q)\over dq} \, &=& \, 
  2q\left(1 - q^2\right)^{7/2} -7q^3\left(1 - q^2\right)^{5/2}      \nonumber\\
&=& \, q\left(2 - 9 q^2\right)\left(1 - q^2\right)^{5/2}

To find the extrema for <tex>$g(q)$</tex>, we set the derative to zero,
and solve for <tex>$0<q_x<1$</tex>:

:equation:
q_x^2 = 2/9 \Rightarrow g(q_x) \, = \, (2/9)(7/9)^{7/2} \approx 0.092

Indeed: 0.1 is a rather tight upper limit.

*Bob*: You can now see what I did when I wrote:

 :inccode: .mkplummer1.rb-8

*Alice*: Ah, yes.  So +x+ stands for <tex>$q$</tex> and +y+ stands for
<tex>$g(q)$</tex>.  You keep throwing darts until you find a +y+
value under the graph.  That gives you the corresponding +x+ value.
Since this value is equal to <tex>$q = v / v_e$</tex>, you have to
multiply +x+ with the escape velocity <tex>$v_e$</tex>, which we found
in eq. (ref(escapevelocity)) to be:

:equation:
v_e(r)  \, = \, \sqrt{2}\left(r^2 + 1\right)^{-1/4}

Okay, I understand the procedure now, and it looks correct.

== xxx

== xxx

== xxx

:equation:
\Phi(r) \, = \, -\,GM {1\over \,\left(r^2 + a^2\right)^{1/2}}

Let <tex>$\tilde f(\br, \bv)$</tex> be the density in phase space.

In a six-dimensional volume element <tex>$d\br d\bv$</tex>, you will find an
amount of mass equal to <tex>$\tilde f(\br, \bv)d\br d\bv$</tex>.

In general, <tex>$\tilde f$</tex> will be time dependent, <i>i.e.</i>
of the form <tex>$\tilde f(\br, \bv)$</tex>, but here we will restrict
ourselves to dynamical equilibrium situations, where <tex>$\tilde f$</tex>
is constant, at least on a dynamical time scale, of order the crossing
time, the time it will take for a typical particle to cross the system.

The energy per unit mass <tex>$E$</tex> is given as:

:equation:
E = \Phi(r) + \half v^2

In the case of spherical symmetry and isotropy, we have
<tex>$\tilde f(\br, \bv) = f(E)$</tex>  where the energy
<tex>$E(\br, \bv)$</tex> is the sum of the kinetic and potential energy
per unit mass of the particles that reside in the volume element
<tex>$d\br d\bv$</tex>.

Note that we dropped the tilde, since the functional form of
<tex>$\tilde f$</tex> and <tex>$f$</tex> are different.  For one
thing, <tex>$\tilde f$</tex> has as argument two three-dimensional
vectors <tex>$\br,\bv$</tex> or equivalently one six-dimensional
vector in phase space, while <tex>$f$</tex> has as argument one scalar
value <tex>$E$</tex>, the energy per unit mass.

Note that within this volume element you will still find an amount of
mass <tex>$f(E)d\br d\bv$</tex>.  It may be tempting to write
<tex>$f(E)dE$</tex> instead, but that would be wrong: the element
<tex>$dE$</tex> would include all particles with energy between
<tex>$E$</tex> and <tex>$E+dE$</tex>, globally in the system, which
will amount to far more mass than is present in the local volume 
element <tex>$\br,\bv$</tex>.

If we pick a specific point in the star cluster, we can determine the
mass density in stars at that point as follows.  Let the distance from
that point to the center be <tex>$r$</tex>, then:

:equation:
\rho(r) = \int_0^\infty f(E) \, d\bv

where the integral is over all of velocity space.
Isotropy tell us that there is no direction dependence in <tex>$\bv$</tex>,
and therefore  only the magnitude <tex>$v=|\bv|$</tex> can come into play.
We can thus substitute:

:equation:
d\bv \, = \, 4\pi \, v^2 dv

Also, we know that the distribution function has to be zero for positive
energies, since unbound particles can escape; in a time-independent solution
the presence of such escapers within the cluster would imply the
presence of such escapers everywhere outside the cluster as well, leading
to an infinite total mass.  We thus impose the condition:

:equation:
f(E) \, = \, 0  \,\,\,\,\, (E \ge 0)

For a given radial distance <tex>$r$</tex>, the escape velocity is given
by definition as the velocity for which a particle can just reach infinity,
which means that the total energy is zero for that particle, and therefore
also the energy per unit mass:

:equation:
E = \Phi(r) + \half v_{esc}^2 = 0 \, \Rightarrow \, v_{esc}(r) = 
\left(-2\Phi(r)\right)^{1/2}

Therefore

:equation:
\rho(r) = 4\pi \int_0^{v_{esc}} f(E)\, v^2dv

Now

:equation:
E = \Phi + \half v^2 \Rightarrow v^2 = 2(E-\Phi) \Rightarrow 

:equation:
v = 2^{1/2}(E-\Phi)^{1/2} \Rightarrow

:equation:
dv = 2^{-1/2}(E-\Phi)^{-1/2}\,dE

So we get for the density:

:eqnarray:
\rho(r) &=& 4\pi \int_0^{v_{esc}} f(E)\, v^2dv                \nonumber\\
&=&  4\pi \int_0^{v_{esc}} f(E)\, 2(E-\Phi)\,
                   2^{-1/2}(E-\Phi)^{-1/2}\,dE                \nonumber\\
&=& 2^{5/2}\pi\int_\Phi^0(E-\Phi)^{1/2}f(E)dE

Here both <tex>$\Phi$</tex> and <tex>$E$</tex> are negative.
Easier to introduce quantities that are positive:

:equation:
\Psi \, = \, - \, \Phi

:equation:
\E \, = \, - \, E

Then:

:equation:
\rho(r) = 2^{5/2}\pi\int_0^\Psi (\Psi-\E)^{1/2}f(\E)d\E

Strictly speaking we would have to change the symbol for <tex>$f$</tex>
again since the functional form is different: <tex>$\hat f(\E)=f(E)$</tex>
but we will leave off the hat.

== xxx

== xxx

== xxx

If we start with:

:equation:
f(x) = \int_0^x {g(t)dt \over (x-t)^\alpha}
\quad\quad\quad\quad  0<\alpha<1

then the inverse solution is:

:equation:
g(t) = {\sin \pi \alpha \over \pi}\,{d\over dt} \,
       \int_0^t {f(x)dx \over (t-x)^{1-\alpha}}

To prove this, let us call the right hand side <tex>$h(t)$</tex>,
and work it out, to see whether we really get back <tex>$g(t)$</tex>
in the end.

:eqnarray:
h(t) &=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
   \int_0^t {dx \over (t-x)^{1-\alpha}}\,
   \int_0^x {g(t')dt' \over (x-t')^\alpha}                        \nonumber\\
&=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
\int_0^t dx \int_0^x dt'{g(t')\over (t-x)^{1-\alpha}(x-t')^\alpha}  \nonumber\\
&=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
\int_0^tdt'\int_{t'}^t dx{g(t')\over(t-x)^{1-\alpha}(x-t')^\alpha}  \nonumber\\
&=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
\int_0^tdt'g(t')\int_{t'}^t {dx\over(t-x)^{1-\alpha}(x-t')^\alpha}

Let us look at the  second integral:

:equation:
I_2 = \int_{t'}^t {dx\over(t-x)^{1-\alpha}(x-t')^\alpha}

We can rewrite this by introducing

:equation:
y = x - t' \, \,\,\Rightarrow\,\, \, x = y + t'  \, \,\,\Rightarrow

:equation:
I_2 = \int_0^{t-t'} {dy\over(t-t'-y)^{1-\alpha}y^\alpha}

We can then rewrite this in terms of

:equation:
z = {y \over t -t'} \, \,\,\Rightarrow\,\, \, y = (t-t')z\, \,\,\Rightarrow

:equation:
t-t'-y = (t-t')(1-z)\, \,\,\Rightarrow

:eqnarray:
I_2 &=& \int_0^1 {(t-t')dz\over(t-t')^{1-\alpha}(1-z)^{1-\alpha}
(t-t')^\alpha z^\alpha}                       \nonumber\\
&=& \int_0^1 {dz\over(1-z)^{1-\alpha} z^\alpha}     \nonumber\\
&=& {\pi \over \sin \pi \alpha}

and therefore

:equation:
h(t) = {d\over dt} \int_0^t g(t')dt' = g(t)

We can work out the expression for <tex>$g(t)$</tex> by taking the
time derivative of the integral, by substituting

:equation:
w = t - x \, \,\,\Rightarrow\,\, \, x = t -w  \, \,\,\Rightarrow

x

x

x

:eqnarray:
g(t) &=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
       \int_0^t {f(x)dx \over (t-x)^{1-\alpha}}                    \nonumber\\
&=& {\sin \pi \alpha \over \pi}\,{d\over dt} \,
\int_0^t {f(t-w)dw \over w^{1-\alpha}}                             \nonumber\\
&=& {\sin \pi \alpha \over \pi}\, \left[
\left.{f(t-w) \over w^{1-\alpha}}\right|_{w=t}+\int_0^t \left({d\over dt}f(t-w)\right)
{dw \over w^{1-\alpha}} \right]                                    \nonumber\\
&=& {\sin \pi \alpha \over \pi}\, \left[
{f(0)\over t^{1-\alpha}} + \int_0^t \left({d\over dx}f(x)\right)
{dx \over (t-x)^{1-\alpha}} \right]                                \nonumber\\
&=& {\sin \pi \alpha \over \pi}\, \left[
{f(0)\over t^{1-\alpha}} + \int_0^t {df\over dx}
{dx \over (t-x)^{1-\alpha}} \right]                               

