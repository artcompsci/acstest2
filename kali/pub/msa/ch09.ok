= Limitations of the Forward-Euler Algorithm

<b>* * * * * * *  This is how far I got, 2007/5/3  * * * * * * * </b>

== xxxxxx

*Carol*: Here it is, fig. ref(euler_elliptic).

 :command: ruby euler_elliptic.rb > euler.out
 :commandinput: gnuplot END
set term post eps
set output "euler_elliptic.ps"
set size ratio -1
plot "euler.out"
quit
END

:figure: euler_elliptic.ps 10cm euler_elliptic
Sixth attempt at integrating the two-body problem: the original failure.

== xxxxxx

*Carol*: Here it is, fig. ref(euler_elliptic_1000).

 :command: ruby euler_elliptic_1000.rb > euler.out
 :commandinput: gnuplot END
set term post eps
set output "euler_elliptic_1000.ps"
set size ratio -1
plot "euler.out"
quit
END

:figure: euler_elliptic_1000.ps 10cm euler_elliptic_1000
Seventh attempt at integrating the two-body problem: signs of hope.

== xxxxxx

 :commandoutput: ruby euler_elliptic_1000.rb | tail -3

 :commandoutput: ruby euler_elliptic_1000_sparse.rb | tail -3

 :commandoutput: ruby euler_elliptic_1000_sparse_ok.rb | tail -3

*Carol*: Here it is, fig. ref(euler_elliptic_1000_sparse_ok).

 :command: ruby euler_elliptic_1000_sparse_ok.rb > euler.out
 :commandinput: gnuplot END
set term post eps
set output "euler_elliptic_1000_sparse_ok.ps"
set size ratio -1
plot "euler.out"
quit
END

:figure: euler_elliptic_1000_sparse_ok.ps 10cm euler_elliptic_1000_sparse_ok
Eighth attempt at integrating the two-body problem: sparse output

== xxxxxx

 :commandoutput: ruby euler_elliptic_10000_sparse_ok.rb > euler.out
 :commandoutput: wc euler.out

*Carol*: Here it is, fig. ref(euler_elliptic_10000_sparse_ok).

 :command: ruby euler_elliptic_10000_sparse_ok.rb > euler.out
 :commandinput: gnuplot END
set term post eps
set output "euler_elliptic_10000_sparse_ok.ps"
set size ratio -1
plot "euler.out"
quit
END

:figure: euler_elliptic_10000_sparse_ok.ps 10cm euler_elliptic_10000_sparse_ok
Ninth attempt at integrating the two-body problem: starting to converge.

== xxxxxx

 :commandoutput: ruby euler_elliptic_100000_sparse_ok.rb > euler.out
 :commandoutput: wc euler.out

*Carol*: Here it is, fig. ref(euler_elliptic_100000_sparse_ok).

 :command: ruby euler_elliptic_100000_sparse_ok.rb > euler.out
 :commandinput: gnuplot END
set term post eps
set output "euler_elliptic_100000_sparse_ok.ps"
set size ratio -1
plot "euler.out"
quit
END

:figure: euler_elliptic_100000_sparse_ok.ps 10cm euler_elliptic_100000_sparse_ok
Tenth attempt at integrating the two-body problem: finally converging.

