= A Complete +Vector+ Class

== Adding +Vector+ Multiplication

*Erica*: Yes, this is really neat.  What a difference, being able to add
vectors by writing

  v = v1 + v2

rather than 

  v = []
  v1.each_index{|k| v[k] = v1[k] + v2[k]}

Thanks, Carol!  You've just made our life a whole lot easier.

*Carol*: Not quite yet; I'll have to do the same thing for multiplication.
In fact, there are two types of multiplication that we have to consider.
I'll open a new file <tt>vector_try.rb</tt>



<b>[ this is how far I got ; 2007/7/28 -- Piet ]</b>

With <tt>vector_try.rb</tt>: 

 :inccode: .vector_try.rb

And with <tt>euler_modified_vector_try.rb</tt>:

 :inccode: .euler_modified_vector_try.rb

 :commandoutput: ruby euler_modified_vector_try.rb | tail -1

With <tt>euler_modified_vector_try_again.rb</tt>:

 :inccode: .euler_modified_vector_try_again.rb

 :commandoutput: ruby euler_modified_vector_try_again.rb | tail -1

Now with <tt>vector.rb</tt>: 

 :inccode: .vector.rb

And with <tt>euler_modified_vector.rb</tt>:

 :inccode: .euler_modified_vector.rb

 :commandoutput: ruby euler_modified_vector.rb | tail -1

Let integer division give floating point results, where needed
