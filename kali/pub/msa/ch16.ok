= A Matter of Speed

== xxxx

*Dan*: Clean and pretty, sure, but is it fast enough?  Let's compare
the speed of the old code and the new vector code.  I wonder whether
all this fancy vector stuff is affecting execution speed.

*Carol*: We can use the +time+ command, to find out how much time a
code spends before finishing.  We can redirect the standard output to
<tt>/dev/null</tt>, literally a null device, effectively a waste
basket, which is a Unix way of throwing the results away.  That way,
we are left only with output that appears on the standard error
channel, such as timing information provided by the +time+ command.

xxx

 :commandoutput: time ruby euler.rb > /dev/null
 :commandoutput: time ruby euler_array_each_def.rb > /dev/null
 :commandoutput: time ruby euler_vector.rb > /dev/null

xxx

 :commandoutput: ruby euler.rb | tail -1
 :commandoutput: ruby euler_array_each_def.rb | tail -1
 :commandoutput: ruby euler_vector.rb | tail -1

== xxx

 :inccode: euler_100000_steps.C

 :commandoutput: gcc -o euler_100000_steps euler_100000_steps.c -lm 
 :commandoutput: time euler_100000_steps

 :commandoutput: gcc -O -o euler_100000_steps euler_100000_steps.c -lm 
 :commandoutput: time euler_100000_steps

 :commandoutput: g++ -o euler_100000_steps euler_100000_steps.C
 :commandoutput: time euler_100000_steps

 :commandoutput: g++ -O -o euler_100000_steps euler_100000_steps.C
 :commandoutput: time euler_100000_steps

 :commandoutput: time ruby euler_100000_steps.rb

 :commandoutput: time ruby euler_array_100000_steps.rb

 :commandoutput: time ruby euler_vector_100000_steps.rb

== xxx

 :commandoutput: gcc -o euler_1000000_steps euler_1000000_steps.c -lm 
 :commandoutput: time euler_1000000_steps

 :commandoutput: gcc -O -o euler_1000000_steps euler_1000000_steps.c -lm 
 :commandoutput: time euler_1000000_steps

 :commandoutput: g++ -o euler_1000000_steps euler_1000000_steps.C
 :commandoutput: time euler_1000000_steps

 :commandoutput: g++ -O -o euler_1000000_steps euler_1000000_steps.C
 :commandoutput: time euler_1000000_steps

 :commandoutput: time ruby euler_1000000_steps.rb

 :commandoutput: time ruby euler_array_1000000_steps.rb

 :commandoutput: time ruby euler_vector_1000000_steps.rb

