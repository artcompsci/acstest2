2003, December 10, Wednesday, Tokyo: Jun, Piet

1. Ruby N-body Integrator

1.1. types

We got rid of most of the .to_f additions that Piet had added last
week to get the code to work.  It now was clear when to add those:
only at the time that a variable is read in for the first time.  So
the type assingment is done not in the class definitions but in the
read-in definitions.  This has the advantage that it will be very
easy to change, say, a time variable from single to double or even
to quadruple precision.

1.2. speed

After cleaning up the code a bit more, we did another speed test.
Compared to the C++ code, the ruby is now 180 times slower in its
normal form.  Unfolding the vector component loops in the pairwise
force calculation made the code `only' 150 times slower; this
unfolding gave a relative speed-up of 20%.

Later Piet used the Array method ".at()" instead of the usual "[]"
in the inner loop, and got an additional speedup of 3%.

1.3. vectors

Next week, we'll try out the package, available on the web, of
C routines for fast arrays, to code our vectors with.
