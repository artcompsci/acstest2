= TODO for acs

Time-stamp: <2005-01-09 12:41:37 piet>

* get kali1.rb working for N=128 particles:

  -- implement general order Hermite, Aarseth, and collocation Runge-Kutta

  -- implement kira-type binary tree, at least one level deep

  -- make a C speed-up version

  -- calculate forces from worldline interactions (rather than snapshot)

  -- start thinking about quadruple precision implementation

  -- start thinking about implementing a perturber implementation

PREVIOUS NOTES, from 2004-06-17:

* in volume 2

  -- explain Yoshida integrators

  -- explain Hermite integrators

  -- implement and explain multiple step methods

* in volume 3

  -- explain Hermite integrators

  -- implement and explain multiple step methods

* in volume 4 (user interface)

  -- write text about clop.rb

  -- manual version for clop.rb ?

* in volume 5 (speed-up)

  -- write fast versions of rknbody.rb

  -- write text about those versions

* in volume 7 (data format)

  -- implement acs-read and subread, and error handling

  -- add f_to_s to Float class, and f_v_to_s to Vector class

  -- a hash table for "density = 0.1", etc.?

  -- implement XML I/O version

  -- write text

* in ok/vol-0

  -- history and prehistory; what else?

* in ok/vol-1

  -- document/discuss acsdoc

* expand \t properly in :inccode:

* reference pointers: how to implement, from one volume to another?

  Here is an old "todo" text about this topic:

  specifically, we need references (and a mechanics to keep them up-to-date
  in both directions!) for the following notion: we may want to give
  guided tours and explanations of short-cuts as a separate track of
  text in the book, apart from the dialogues.  This could be as
  preface, appendices, and comments at the end of each chapter

